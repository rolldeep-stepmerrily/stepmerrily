generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id          Int       @id @default(autoincrement())
  username    String    @unique
  password    String
  email       String    @unique
  name        String
  nickname    String    @unique
  phoneNumber String    @unique
  avatar      String?
  role        Role      @default(USER)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  deletedAt   DateTime?

  term     Term?
  comments Comment[]
  posts    Post[]
  likes    Like[]
}

model Term {
  id              Int       @id
  isService       Boolean   @default(false)
  isPrivacy       Boolean   @default(false)
  isPrivacyOption Boolean   @default(false)
  isAge           Boolean   @default(false)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime? @updatedAt
  deletedAt       DateTime?

  user User @relation(fields: [id], references: [id])
}

model Post {
  id        Int       @id @default(autoincrement())
  userId    Int
  title     String
  content   String
  images    String?
  views     Int       @default(0)
  likes     Like[]
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?

  user     User      @relation(fields: [userId], references: [id])
  comments Comment[]
}

model Like {
  id        Int       @id @default(autoincrement())
  userId    Int
  postId    Int?
  commentId Int?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?

  user    User     @relation(fields: [userId], references: [id])
  post    Post?    @relation(fields: [postId], references: [id])
  comment Comment? @relation(fields: [commentId], references: [id])
}

model Comment {
  id        Int       @id @default(autoincrement())
  userId    Int
  postId    Int
  commentId Int?
  content   String
  likes     Like[]
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?

  user User @relation(fields: [userId], references: [id])
  post Post @relation(fields: [postId], references: [id])

  reply      Comment?  @relation("comment", fields: [commentId], references: [id])
  reComments Comment[] @relation("comment")
}
